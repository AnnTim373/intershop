openapi: 3.0.3
info:
  title: Order and Product API
  version: 1.0.0
  description: |
    API для управления заказами и продуктами. Поддерживает создание, получение и загрузку изображений.
    Реализовано с использованием Spring WebFlux и реактивных подходов.

servers:
  - url: http://localhost:8080

tags:
  - name: Orders
    description: Операции с заказами
  - name: Products
    description: Операции с продуктами

paths:
  /api/orders:
    get:
      tags: [ Orders ]
      summary: Получить список заказов
      description: Возвращает все заказы в виде списка.
      operationId: getOrders
      responses:
        '200':
          description: Список заказов
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderOutputDTO'

    post:
      tags: [ Orders ]
      summary: Создать заказ
      description: Создает новый заказ по переданному списку товаров.
      operationId: saveOrder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderInputDTO'
      responses:
        '200':
          description: Заказ успешно создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderOutputDTO'

  /api/account/balance/{}:
    get:
      tags: [ Account ]
      summary: Получить баланс
      description: Возвращает баланс текущего активного счета.
      operationId: getBalance
      parameters:
        - name: accountId
          in: path
          required: true
          description: Идентификатор счета
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Баланс
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/BalanceOutputDTO'

  /api/products:
    get:
      tags: [ Products ]
      summary: Получить список продуктов
      description: Возвращает список всех продуктов с возможностью поиска и пагинации.
      operationId: getProducts
      parameters:
        - name: search
          in: query
          required: false
          schema:
            type: string
          description: Фильтрация по названию или описанию продукта
        - name: page
          in: query
          required: false
          schema:
            type: integer
          description: Номер страницы
        - name: size
          in: query
          required: false
          schema:
            type: integer
          description: Размер страницы
        - name: sort
          in: query
          required: false
          schema:
            type: string
          description: Сортировка, например `price,asc`
      responses:
        '200':
          description: Список продуктов с пагинацией
          headers:
            X-Total-Count:
              description: Общее количество элементов
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductOutputDTO'

    post:
      tags: [ Products ]
      summary: Создать продукт
      description: Создает новый продукт. Поддерживает загрузку изображения.
      operationId: saveProduct
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductInputDTO'
      responses:
        '200':
          description: Продукт успешно создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductOutputDTO'

components:
  schemas:

    OrderInputDTO:
      type: object
      description: Данные для создания нового заказа
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderContentInputDTO'
      required: [ items ]

    OrderContentInputDTO:
      type: object
      description: Элемент содержимого заказа
      properties:
        productId:
          type: integer
          format: int64
        quantity:
          type: integer
      required: [ productId, quantity ]

    OrderOutputDTO:
      type: object
      description: Представление созданного заказа
      properties:
        id:
          type: integer
          format: int64
        orderDate:
          type: string
          format: date-time
        contents:
          type: array
          items:
            $ref: '#/components/schemas/OrderContentOutputDTO'

    OrderContentOutputDTO:
      type: object
      description: Содержимое заказа
      properties:
        productName:
          type: string
        quantity:
          type: integer
        price:
          type: number
          format: double

    ProductInputDTO:
      type: object
      description: Данные для создания продукта (включая изображение)
      properties:
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: double
        image:
          type: string
          format: binary
      required: [ name, price ]

    ProductOutputDTO:
      type: object
      description: Представление продукта
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: double
        image:
          type: string

    BalanceOutputDTO:
      type: object
      description: Результат запроса текущего баланса
      properties:
        balance:
          type: number
          format: double
          description: Значение текущего баланса
