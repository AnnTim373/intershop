services:
  intershop-build:
    build:
      context: .
    working_dir: /intershop
    command: sh -c "cp /intershop/backend/target/intershop.jar /intershop/jars/backend && cp /intershop/payment/target/payment.jar /intershop/jars/payment"
    volumes:
      - ./jars/backend:/intershop/jars/backend
      - ./jars/payment:/intershop/jars/payment

  redis:
    image: redis:7.2
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - ./redis_data:/data
    restart: always
    networks:
      - intershop_net

  postgres:
    image: postgres:15
    container_name: keycloak-postgres
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak_password
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "keycloak" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - intershop_net

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak_password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin_password
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HTTP_ENABLED: true
      KC_HTTP_PORT: 8043
    volumes:
      - ./realm-export.json:/opt/keycloak/data/import/realm-export.json
    command: start-dev --import-realm
    ports:
      - "8043:8043"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - intershop_net

  intershop-backend:
    image: openjdk:21
    restart:
      always
    volumes:
      - ./jars/backend:/intershop
    depends_on:
      - intershop-build
      - redis
    command: [ "java", "-jar", "/intershop/intershop.jar" ]
    ports:
      - "8040:8040"
    networks:
      - intershop_net

  intershop-payment:
    image: openjdk:21
    restart:
      always
    volumes:
      - ./jars/payment:/intershop
    depends_on:
      - intershop-build
    command: [ "java", "-jar", "/intershop/payment.jar" ]
    ports:
      - "8041:8041"
    networks:
      - intershop_net

networks:
  intershop_net:
    driver: bridge
